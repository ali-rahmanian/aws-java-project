apiVersion: apps/v1 
kind: Deployment
metadata:
  labels:
    app: node-hostname
  name: node-hostname
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-hostname
  template:
    metadata:
      labels:
        app: node-hostname
    spec:
      containers:
      - image: ravasimages/node-hostname:v1
        name: node-hostname
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
        ports:
        - containerPort: 3000
        securityContext:
          runAsUser: 1000 
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata: 
  name: internal-nodejs-service
  annotations:
     service.beta.kubernetes.io/aws-load-balancer-type: nlb
     service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
     service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
spec:
  selector:
    app: node-hostname
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata: 
  name: external-node-hostname-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
spec:
  selector:
    app: node-hostname
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: node-hostname-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: node-hostname
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50